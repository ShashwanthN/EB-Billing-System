{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 CREATE DATABASE IF NOT EXISTS `users_directory`;\
USE `users_directory`;\
\
\
CREATE TABLE `users` (\
  user_id VARCHAR(8) NOT NULL,\
  first_name VARCHAR(45) DEFAULT NULL,\
  last_name VARCHAR(45) DEFAULT NULL,\
  aadhar_id VARCHAR(12) DEFAULT NULL,\
  password VARCHAR(255) NOT NULL,\
  phone_number VARCHAR(10) NOT NULL,\
  email VARCHAR(255) NOT NULL UNIQUE,\
  PRIMARY KEY (user_id),\
  CONSTRAINT UC_User UNIQUE (aadhar_id, email)\
) ENGINE=InnoDB DEFAULT CHARSET=latin1;\
\
CREATE TABLE `household_connections` (\
  connection_id INT NOT NULL AUTO_INCREMENT,\
  user_id VARCHAR(8) NOT NULL,\
  connection_date DATETIME DEFAULT CURRENT_TIMESTAMP,\
  address VARCHAR(255) NOT NULL,\
  load_required VARCHAR(45) NOT NULL,\
  phase VARCHAR(45) NOT NULL,\
  applicant_photo LONGBLOB NOT NULL,\
  property_tax_report LONGBLOB NOT NULL,\
  applicant_reference_number VARCHAR(50) NOT NULL UNIQUE,\
  payment_status ENUM('paid', 'not_paid') NOT NULL DEFAULT 'not_paid',\
  PRIMARY KEY (connection_id),\
  FOREIGN KEY (user_id) REFERENCES `users`(user_id)\
) ENGINE=InnoDB DEFAULT CHARSET=latin1;\
\
CREATE TABLE `commercial_connections` (\
  connection_id INT NOT NULL AUTO_INCREMENT,\
  user_id VARCHAR(8) NOT NULL,\
  connection_date DATETIME DEFAULT CURRENT_TIMESTAMP,\
  business_name VARCHAR(100) NOT NULL,\
  business_type VARCHAR(100) NOT NULL,\
  address VARCHAR(255) NOT NULL,\
  sq_meter DECIMAL(10, 2) NOT NULL,\
  load_required VARCHAR(45) NOT NULL,\
  phase VARCHAR(45) NOT NULL,\
  applicant_photo LONGBLOB NOT NULL,\
  property_tax_report LONGBLOB NOT NULL,\
  ownership_proof LONGBLOB NOT NULL,\
  applicant_reference_number VARCHAR(50) NOT NULL UNIQUE,\
  payment_status ENUM('paid', 'not_paid') NOT NULL DEFAULT 'not_paid',\
  PRIMARY KEY (connection_id),\
  FOREIGN KEY (user_id) REFERENCES `users`(user_id)\
) ENGINE=InnoDB DEFAULT CHARSET=latin1;\
\
CREATE TABLE `meter_readings` (\
  reading_id INT NOT NULL AUTO_INCREMENT,\
  user_id VARCHAR(8) NOT NULL,\
  connection_type ENUM('household', 'commercial') NOT NULL,\
  reading_date DATETIME DEFAULT CURRENT_TIMESTAMP,\
  units_consumed INT NOT NULL,\
  payment_status ENUM('paid', 'not_paid') NOT NULL DEFAULT 'not_paid',\
  PRIMARY KEY (reading_id),\
  FOREIGN KEY (user_id) REFERENCES `users`(user_id)\
    ON DELETE CASCADE ON UPDATE CASCADE\
) ENGINE=InnoDB DEFAULT CHARSET=latin1;\
\
CREATE TABLE `bills` (\
  bill_id INT NOT NULL AUTO_INCREMENT,\
  reading_id INT NOT NULL,\
  bill_date DATETIME DEFAULT CURRENT_TIMESTAMP,\
  amount DECIMAL(10, 2) NOT NULL,\
  PRIMARY KEY (bill_id),\
  FOREIGN KEY (reading_id) REFERENCES `meter_readings`(reading_id)\
      ON DELETE CASCADE ON UPDATE CASCADE\
) ENGINE=InnoDB DEFAULT CHARSET=latin1;\
\
CREATE TABLE `payments` (\
  payment_id INT NOT NULL AUTO_INCREMENT,\
  bill_id INT NOT NULL,\
  receipt_no VARCHAR(50) NOT NULL,\
  amount_debited DECIMAL(10, 2) NOT NULL,\
  transaction_no VARCHAR(50) NOT NULL,\
  receipt_date DATETIME NOT NULL,\
  bank_name VARCHAR(50),\
  card_type VARCHAR(50),\
  service_no varchar(50),\
  PRIMARY KEY (payment_id),\
  FOREIGN KEY (bill_id) REFERENCES `bills`(bill_id)\
      ON DELETE CASCADE ON UPDATE CASCADE\
) ENGINE=InnoDB DEFAULT CHARSET=latin1;\
\
DELIMITER //\
\
CREATE TRIGGER after_meter_reading_insert\
AFTER INSERT ON meter_readings\
FOR EACH ROW\
BEGIN\
  DECLARE unit_price DECIMAL(10, 2);\
  DECLARE total_amount DECIMAL(10, 2);\
\
  IF NEW.connection_type = 'household' THEN\
    IF NEW.units_consumed <= 50 THEN\
      SET total_amount = 0;\
    ELSEIF NEW.units_consumed <= 100 THEN\
      SET total_amount = (NEW.units_consumed - 50) * 2;\
    ELSEIF NEW.units_consumed <= 300 THEN\
      SET total_amount = 50 * 2 + (NEW.units_consumed - 100) * 4;\
    ELSE\
      SET total_amount = 50 * 2 + 200 * 4 + (NEW.units_consumed - 300) * 6;\
    END IF;\
  ELSEIF NEW.connection_type = 'commercial' THEN\
    IF NEW.units_consumed <= 20 THEN\
      SET total_amount = 0;\
    ELSEIF NEW.units_consumed <= 100 THEN\
      SET total_amount = (NEW.units_consumed - 20) * 4;\
    ELSEIF NEW.units_consumed <= 200 THEN\
      SET total_amount = 80 * 4 + (NEW.units_consumed - 100) * 6;\
    ELSE\
      SET total_amount = 80 * 4 + 100 * 6 + (NEW.units_consumed - 200) * 8;\
    END IF;\
  END IF;\
\
  INSERT INTO bills (reading_id, amount) VALUES (NEW.reading_id, total_amount);\
END //\
\
DELIMITER ;\
\
\
DELIMITER //\
\
CREATE TRIGGER after_household_connection_insert\
AFTER INSERT ON household_connections\
FOR EACH ROW\
BEGIN\
  INSERT INTO meter_readings (user_id, connection_type, reading_date, units_consumed, payment_status) VALUES\
  (NEW.user_id, 'household', '2023-01-01 00:00:00', 100, 'not_paid'),\
  (NEW.user_id, 'household', '2023-02-01 00:00:00', 150, 'not_paid'),\
  (NEW.user_id, 'household', '2023-03-01 00:00:00', 130, 'not_paid'),\
  (NEW.user_id, 'household', '2023-04-01 00:00:00', 120, 'not_paid'),\
  (NEW.user_id, 'household', '2023-05-01 00:00:00', 160, 'not_paid'),\
  (NEW.user_id, 'household', '2023-06-01 00:00:00', 110, 'not_paid'),\
  (NEW.user_id, 'household', '2023-07-01 00:00:00', 140, 'not_paid'),\
  (NEW.user_id, 'household', '2023-08-01 00:00:00', 150, 'not_paid'),\
  (NEW.user_id, 'household', '2023-09-01 00:00:00', 170, 'not_paid'),\
  (NEW.user_id, 'household', '2023-10-01 00:00:00', 160, 'not_paid'),\
  (NEW.user_id, 'household', '2023-11-01 00:00:00', 180, 'not_paid'),\
  (NEW.user_id, 'household', '2023-12-01 00:00:00', 190, 'not_paid');\
END //\
\
DELIMITER ;\
DELIMITER //\
\
CREATE TRIGGER after_commercial_connection_insert\
AFTER INSERT ON commercial_connections\
FOR EACH ROW\
BEGIN\
  INSERT INTO meter_readings (user_id, connection_type, reading_date, units_consumed, payment_status) VALUES\
  (NEW.user_id, 'commercial', '2023-01-01 00:00:00', 300, 'not_paid'),\
  (NEW.user_id, 'commercial', '2023-02-01 00:00:00', 350, 'not_paid'),\
  (NEW.user_id, 'commercial', '2023-03-01 00:00:00', 320, 'not_paid'),\
  (NEW.user_id, 'commercial', '2023-04-01 00:00:00', 310, 'not_paid'),\
  (NEW.user_id, 'commercial', '2023-05-01 00:00:00', 360, 'not_paid'),\
  (NEW.user_id, 'commercial', '2023-06-01 00:00:00', 330, 'not_paid'),\
  (NEW.user_id, 'commercial', '2023-07-01 00:00:00', 340, 'not_paid'),\
  (NEW.user_id, 'commercial', '2023-08-01 00:00:00', 350, 'not_paid'),\
  (NEW.user_id, 'commercial', '2023-09-01 00:00:00', 370, 'not_paid'),\
  (NEW.user_id, 'commercial', '2023-10-01 00:00:00', 360, 'not_paid'),\
  (NEW.user_id, 'commercial', '2023-11-01 00:00:00', 380, 'not_paid'),\
  (NEW.user_id, 'commercial', '2023-12-01 00:00:00', 390, 'not_paid');\
END //\
\
DELIMITER ;\
}